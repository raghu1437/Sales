#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="inst_mgmt_sys")]
public partial class instDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertadministration(administration instance);
  partial void Updateadministration(administration instance);
  partial void Deleteadministration(administration instance);
  partial void Insertbill(bill instance);
  partial void Updatebill(bill instance);
  partial void Deletebill(bill instance);
  partial void Insertcharge(charge instance);
  partial void Updatecharge(charge instance);
  partial void Deletecharge(charge instance);
  partial void Insertimage(image instance);
  partial void Updateimage(image instance);
  partial void Deleteimage(image instance);
  partial void Insertmalumni(malumni instance);
  partial void Updatemalumni(malumni instance);
  partial void Deletemalumni(malumni instance);
  partial void Insertmarksint(marksint instance);
  partial void Updatemarksint(marksint instance);
  partial void Deletemarksint(marksint instance);
  partial void Insertmcourse(mcourse instance);
  partial void Updatemcourse(mcourse instance);
  partial void Deletemcourse(mcourse instance);
  partial void Insertmdatesheet(mdatesheet instance);
  partial void Updatemdatesheet(mdatesheet instance);
  partial void Deletemdatesheet(mdatesheet instance);
  partial void Insertmevent(mevent instance);
  partial void Updatemevent(mevent instance);
  partial void Deletemevent(mevent instance);
  partial void Insertmfee(mfee instance);
  partial void Updatemfee(mfee instance);
  partial void Deletemfee(mfee instance);
  partial void Insertmpassword(mpassword instance);
  partial void Updatempassword(mpassword instance);
  partial void Deletempassword(mpassword instance);
  partial void Insertmresult(mresult instance);
  partial void Updatemresult(mresult instance);
  partial void Deletemresult(mresult instance);
  partial void Insertmstaff(mstaff instance);
  partial void Updatemstaff(mstaff instance);
  partial void Deletemstaff(mstaff instance);
  partial void Insertmstudent(mstudent instance);
  partial void Updatemstudent(mstudent instance);
  partial void Deletemstudent(mstudent instance);
  partial void Inserttattendance_stu(tattendance_stu instance);
  partial void Updatetattendance_stu(tattendance_stu instance);
  partial void Deletetattendance_stu(tattendance_stu instance);
  partial void Inserttattendancestaff(tattendancestaff instance);
  partial void Updatetattendancestaff(tattendancestaff instance);
  partial void Deletetattendancestaff(tattendancestaff instance);
  partial void Inserttransport(transport instance);
  partial void Updatetransport(transport instance);
  partial void Deletetransport(transport instance);
  partial void Inserttsalarypaid(tsalarypaid instance);
  partial void Updatetsalarypaid(tsalarypaid instance);
  partial void Deletetsalarypaid(tsalarypaid instance);
  partial void Insertfeedback(feedback instance);
  partial void Updatefeedback(feedback instance);
  partial void Deletefeedback(feedback instance);
  #endregion
	
	public instDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["inst_mgmt_sysConnectionString4"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public instDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public instDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public instDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public instDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<administration> administrations
	{
		get
		{
			return this.GetTable<administration>();
		}
	}
	
	public System.Data.Linq.Table<bill> bills
	{
		get
		{
			return this.GetTable<bill>();
		}
	}
	
	public System.Data.Linq.Table<charge> charges
	{
		get
		{
			return this.GetTable<charge>();
		}
	}
	
	public System.Data.Linq.Table<image> images
	{
		get
		{
			return this.GetTable<image>();
		}
	}
	
	public System.Data.Linq.Table<malumni> malumnis
	{
		get
		{
			return this.GetTable<malumni>();
		}
	}
	
	public System.Data.Linq.Table<marksint> marksints
	{
		get
		{
			return this.GetTable<marksint>();
		}
	}
	
	public System.Data.Linq.Table<mcourse> mcourses
	{
		get
		{
			return this.GetTable<mcourse>();
		}
	}
	
	public System.Data.Linq.Table<mdatesheet> mdatesheets
	{
		get
		{
			return this.GetTable<mdatesheet>();
		}
	}
	
	public System.Data.Linq.Table<mevent> mevents
	{
		get
		{
			return this.GetTable<mevent>();
		}
	}
	
	public System.Data.Linq.Table<mfee> mfees
	{
		get
		{
			return this.GetTable<mfee>();
		}
	}
	
	public System.Data.Linq.Table<mpassword> mpasswords
	{
		get
		{
			return this.GetTable<mpassword>();
		}
	}
	
	public System.Data.Linq.Table<mresult> mresults
	{
		get
		{
			return this.GetTable<mresult>();
		}
	}
	
	public System.Data.Linq.Table<mstaff> mstaffs
	{
		get
		{
			return this.GetTable<mstaff>();
		}
	}
	
	public System.Data.Linq.Table<mstudent> mstudents
	{
		get
		{
			return this.GetTable<mstudent>();
		}
	}
	
	public System.Data.Linq.Table<tattendance_stu> tattendance_stus
	{
		get
		{
			return this.GetTable<tattendance_stu>();
		}
	}
	
	public System.Data.Linq.Table<tattendancestaff> tattendancestaffs
	{
		get
		{
			return this.GetTable<tattendancestaff>();
		}
	}
	
	public System.Data.Linq.Table<transport> transports
	{
		get
		{
			return this.GetTable<transport>();
		}
	}
	
	public System.Data.Linq.Table<tsalarypaid> tsalarypaids
	{
		get
		{
			return this.GetTable<tsalarypaid>();
		}
	}
	
	public System.Data.Linq.Table<feedback> feedbacks
	{
		get
		{
			return this.GetTable<feedback>();
		}
	}
}

[Table(Name="dbo.administration")]
public partial class administration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _name;
	
	private string _designation;
	
	private string _number;
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnnumberChanging(string value);
    partial void OnnumberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public administration()
	{
		OnCreated();
	}
	
	[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[Column(Storage="_designation", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string designation
	{
		get
		{
			return this._designation;
		}
		set
		{
			if ((this._designation != value))
			{
				this.OndesignationChanging(value);
				this.SendPropertyChanging();
				this._designation = value;
				this.SendPropertyChanged("designation");
				this.OndesignationChanged();
			}
		}
	}
	
	[Column(Storage="_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string number
	{
		get
		{
			return this._number;
		}
		set
		{
			if ((this._number != value))
			{
				this.OnnumberChanging(value);
				this.SendPropertyChanging();
				this._number = value;
				this.SendPropertyChanged("number");
				this.OnnumberChanged();
			}
		}
	}
	
	[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.bill")]
public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _bid;
	
	private string _bname;
	
	private string _bammount;
	
	private string _bdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbidChanging(string value);
    partial void OnbidChanged();
    partial void OnbnameChanging(string value);
    partial void OnbnameChanged();
    partial void OnbammountChanging(string value);
    partial void OnbammountChanged();
    partial void OnbdateChanging(string value);
    partial void OnbdateChanged();
    #endregion
	
	public bill()
	{
		OnCreated();
	}
	
	[Column(Storage="_bid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string bid
	{
		get
		{
			return this._bid;
		}
		set
		{
			if ((this._bid != value))
			{
				this.OnbidChanging(value);
				this.SendPropertyChanging();
				this._bid = value;
				this.SendPropertyChanged("bid");
				this.OnbidChanged();
			}
		}
	}
	
	[Column(Storage="_bname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string bname
	{
		get
		{
			return this._bname;
		}
		set
		{
			if ((this._bname != value))
			{
				this.OnbnameChanging(value);
				this.SendPropertyChanging();
				this._bname = value;
				this.SendPropertyChanged("bname");
				this.OnbnameChanged();
			}
		}
	}
	
	[Column(Storage="_bammount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string bammount
	{
		get
		{
			return this._bammount;
		}
		set
		{
			if ((this._bammount != value))
			{
				this.OnbammountChanging(value);
				this.SendPropertyChanging();
				this._bammount = value;
				this.SendPropertyChanged("bammount");
				this.OnbammountChanged();
			}
		}
	}
	
	[Column(Storage="_bdate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string bdate
	{
		get
		{
			return this._bdate;
		}
		set
		{
			if ((this._bdate != value))
			{
				this.OnbdateChanging(value);
				this.SendPropertyChanging();
				this._bdate = value;
				this.SendPropertyChanged("bdate");
				this.OnbdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.charge")]
public partial class charge : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _srno;
	
	private string _date;
	
	private string _charges;
	
	private string _purpose;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsrnoChanging(string value);
    partial void OnsrnoChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnchargesChanging(string value);
    partial void OnchargesChanged();
    partial void OnpurposeChanging(string value);
    partial void OnpurposeChanged();
    #endregion
	
	public charge()
	{
		OnCreated();
	}
	
	[Column(Storage="_srno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string srno
	{
		get
		{
			return this._srno;
		}
		set
		{
			if ((this._srno != value))
			{
				this.OnsrnoChanging(value);
				this.SendPropertyChanging();
				this._srno = value;
				this.SendPropertyChanged("srno");
				this.OnsrnoChanged();
			}
		}
	}
	
	[Column(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[Column(Storage="_charges", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string charges
	{
		get
		{
			return this._charges;
		}
		set
		{
			if ((this._charges != value))
			{
				this.OnchargesChanging(value);
				this.SendPropertyChanging();
				this._charges = value;
				this.SendPropertyChanged("charges");
				this.OnchargesChanged();
			}
		}
	}
	
	[Column(Storage="_purpose", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string purpose
	{
		get
		{
			return this._purpose;
		}
		set
		{
			if ((this._purpose != value))
			{
				this.OnpurposeChanging(value);
				this.SendPropertyChanging();
				this._purpose = value;
				this.SendPropertyChanged("purpose");
				this.OnpurposeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.images")]
public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _srno;
	
	private string _picpath;
	
	private string _comments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsrnoChanging(string value);
    partial void OnsrnoChanged();
    partial void OnpicpathChanging(string value);
    partial void OnpicpathChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
	
	public image()
	{
		OnCreated();
	}
	
	[Column(Storage="_srno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string srno
	{
		get
		{
			return this._srno;
		}
		set
		{
			if ((this._srno != value))
			{
				this.OnsrnoChanging(value);
				this.SendPropertyChanging();
				this._srno = value;
				this.SendPropertyChanged("srno");
				this.OnsrnoChanged();
			}
		}
	}
	
	[Column(Storage="_picpath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string picpath
	{
		get
		{
			return this._picpath;
		}
		set
		{
			if ((this._picpath != value))
			{
				this.OnpicpathChanging(value);
				this.SendPropertyChanging();
				this._picpath = value;
				this.SendPropertyChanged("picpath");
				this.OnpicpathChanged();
			}
		}
	}
	
	[Column(Storage="_comments", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string comments
	{
		get
		{
			return this._comments;
		}
		set
		{
			if ((this._comments != value))
			{
				this.OncommentsChanging(value);
				this.SendPropertyChanging();
				this._comments = value;
				this.SendPropertyChanged("comments");
				this.OncommentsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.malumni")]
public partial class malumni : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _enrolmentno;
	
	private string _employed;
	
	private string _companyname;
	
	private string _co_address1;
	
	private string _co_address2;
	
	private string _city;
	
	private string _co_phone;
	
	private string _co_email;
	
	private string _co_webpage;
	
	private string _designation;
	
	private string _doj;
	
	private string _dol;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnenrolmentnoChanging(string value);
    partial void OnenrolmentnoChanged();
    partial void OnemployedChanging(string value);
    partial void OnemployedChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void Onco_address1Changing(string value);
    partial void Onco_address1Changed();
    partial void Onco_address2Changing(string value);
    partial void Onco_address2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onco_phoneChanging(string value);
    partial void Onco_phoneChanged();
    partial void Onco_emailChanging(string value);
    partial void Onco_emailChanged();
    partial void Onco_webpageChanging(string value);
    partial void Onco_webpageChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OndojChanging(string value);
    partial void OndojChanged();
    partial void OndolChanging(string value);
    partial void OndolChanged();
    #endregion
	
	public malumni()
	{
		OnCreated();
	}
	
	[Column(Storage="_enrolmentno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string enrolmentno
	{
		get
		{
			return this._enrolmentno;
		}
		set
		{
			if ((this._enrolmentno != value))
			{
				this.OnenrolmentnoChanging(value);
				this.SendPropertyChanging();
				this._enrolmentno = value;
				this.SendPropertyChanged("enrolmentno");
				this.OnenrolmentnoChanged();
			}
		}
	}
	
	[Column(Storage="_employed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string employed
	{
		get
		{
			return this._employed;
		}
		set
		{
			if ((this._employed != value))
			{
				this.OnemployedChanging(value);
				this.SendPropertyChanging();
				this._employed = value;
				this.SendPropertyChanged("employed");
				this.OnemployedChanged();
			}
		}
	}
	
	[Column(Storage="_companyname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string companyname
	{
		get
		{
			return this._companyname;
		}
		set
		{
			if ((this._companyname != value))
			{
				this.OncompanynameChanging(value);
				this.SendPropertyChanging();
				this._companyname = value;
				this.SendPropertyChanged("companyname");
				this.OncompanynameChanged();
			}
		}
	}
	
	[Column(Storage="_co_address1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string co_address1
	{
		get
		{
			return this._co_address1;
		}
		set
		{
			if ((this._co_address1 != value))
			{
				this.Onco_address1Changing(value);
				this.SendPropertyChanging();
				this._co_address1 = value;
				this.SendPropertyChanged("co_address1");
				this.Onco_address1Changed();
			}
		}
	}
	
	[Column(Storage="_co_address2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string co_address2
	{
		get
		{
			return this._co_address2;
		}
		set
		{
			if ((this._co_address2 != value))
			{
				this.Onco_address2Changing(value);
				this.SendPropertyChanging();
				this._co_address2 = value;
				this.SendPropertyChanged("co_address2");
				this.Onco_address2Changed();
			}
		}
	}
	
	[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[Column(Storage="_co_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string co_phone
	{
		get
		{
			return this._co_phone;
		}
		set
		{
			if ((this._co_phone != value))
			{
				this.Onco_phoneChanging(value);
				this.SendPropertyChanging();
				this._co_phone = value;
				this.SendPropertyChanged("co_phone");
				this.Onco_phoneChanged();
			}
		}
	}
	
	[Column(Storage="_co_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string co_email
	{
		get
		{
			return this._co_email;
		}
		set
		{
			if ((this._co_email != value))
			{
				this.Onco_emailChanging(value);
				this.SendPropertyChanging();
				this._co_email = value;
				this.SendPropertyChanged("co_email");
				this.Onco_emailChanged();
			}
		}
	}
	
	[Column(Storage="_co_webpage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string co_webpage
	{
		get
		{
			return this._co_webpage;
		}
		set
		{
			if ((this._co_webpage != value))
			{
				this.Onco_webpageChanging(value);
				this.SendPropertyChanging();
				this._co_webpage = value;
				this.SendPropertyChanged("co_webpage");
				this.Onco_webpageChanged();
			}
		}
	}
	
	[Column(Storage="_designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string designation
	{
		get
		{
			return this._designation;
		}
		set
		{
			if ((this._designation != value))
			{
				this.OndesignationChanging(value);
				this.SendPropertyChanging();
				this._designation = value;
				this.SendPropertyChanged("designation");
				this.OndesignationChanged();
			}
		}
	}
	
	[Column(Storage="_doj", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string doj
	{
		get
		{
			return this._doj;
		}
		set
		{
			if ((this._doj != value))
			{
				this.OndojChanging(value);
				this.SendPropertyChanging();
				this._doj = value;
				this.SendPropertyChanged("doj");
				this.OndojChanged();
			}
		}
	}
	
	[Column(Storage="_dol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string dol
	{
		get
		{
			return this._dol;
		}
		set
		{
			if ((this._dol != value))
			{
				this.OndolChanging(value);
				this.SendPropertyChanging();
				this._dol = value;
				this.SendPropertyChanged("dol");
				this.OndolChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.marksint")]
public partial class marksint : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _srno;
	
	private string _rollno;
	
	private string _subject;
	
	private string _sessional1;
	
	private string _sessional2;
	
	private string _attendance;
	
	private string _assignments;
	
	private string _total;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsrnoChanging(string value);
    partial void OnsrnoChanged();
    partial void OnrollnoChanging(string value);
    partial void OnrollnoChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void Onsessional1Changing(string value);
    partial void Onsessional1Changed();
    partial void Onsessional2Changing(string value);
    partial void Onsessional2Changed();
    partial void OnattendanceChanging(string value);
    partial void OnattendanceChanged();
    partial void OnassignmentsChanging(string value);
    partial void OnassignmentsChanged();
    partial void OntotalChanging(string value);
    partial void OntotalChanged();
    #endregion
	
	public marksint()
	{
		OnCreated();
	}
	
	[Column(Storage="_srno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string srno
	{
		get
		{
			return this._srno;
		}
		set
		{
			if ((this._srno != value))
			{
				this.OnsrnoChanging(value);
				this.SendPropertyChanging();
				this._srno = value;
				this.SendPropertyChanged("srno");
				this.OnsrnoChanged();
			}
		}
	}
	
	[Column(Storage="_rollno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string rollno
	{
		get
		{
			return this._rollno;
		}
		set
		{
			if ((this._rollno != value))
			{
				this.OnrollnoChanging(value);
				this.SendPropertyChanging();
				this._rollno = value;
				this.SendPropertyChanged("rollno");
				this.OnrollnoChanged();
			}
		}
	}
	
	[Column(Storage="_subject", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string subject
	{
		get
		{
			return this._subject;
		}
		set
		{
			if ((this._subject != value))
			{
				this.OnsubjectChanging(value);
				this.SendPropertyChanging();
				this._subject = value;
				this.SendPropertyChanged("subject");
				this.OnsubjectChanged();
			}
		}
	}
	
	[Column(Storage="_sessional1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string sessional1
	{
		get
		{
			return this._sessional1;
		}
		set
		{
			if ((this._sessional1 != value))
			{
				this.Onsessional1Changing(value);
				this.SendPropertyChanging();
				this._sessional1 = value;
				this.SendPropertyChanged("sessional1");
				this.Onsessional1Changed();
			}
		}
	}
	
	[Column(Storage="_sessional2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string sessional2
	{
		get
		{
			return this._sessional2;
		}
		set
		{
			if ((this._sessional2 != value))
			{
				this.Onsessional2Changing(value);
				this.SendPropertyChanging();
				this._sessional2 = value;
				this.SendPropertyChanged("sessional2");
				this.Onsessional2Changed();
			}
		}
	}
	
	[Column(Storage="_attendance", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string attendance
	{
		get
		{
			return this._attendance;
		}
		set
		{
			if ((this._attendance != value))
			{
				this.OnattendanceChanging(value);
				this.SendPropertyChanging();
				this._attendance = value;
				this.SendPropertyChanged("attendance");
				this.OnattendanceChanged();
			}
		}
	}
	
	[Column(Storage="_assignments", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string assignments
	{
		get
		{
			return this._assignments;
		}
		set
		{
			if ((this._assignments != value))
			{
				this.OnassignmentsChanging(value);
				this.SendPropertyChanging();
				this._assignments = value;
				this.SendPropertyChanged("assignments");
				this.OnassignmentsChanged();
			}
		}
	}
	
	[Column(Storage="_total", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string total
	{
		get
		{
			return this._total;
		}
		set
		{
			if ((this._total != value))
			{
				this.OntotalChanging(value);
				this.SendPropertyChanging();
				this._total = value;
				this.SendPropertyChanged("total");
				this.OntotalChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mcourses")]
public partial class mcourse : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _course_id;
	
	private string _course_name;
	
	private string _course_duration;
	
	private string _eligibility;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    partial void Oncourse_durationChanging(string value);
    partial void Oncourse_durationChanged();
    partial void OneligibilityChanging(string value);
    partial void OneligibilityChanged();
    #endregion
	
	public mcourse()
	{
		OnCreated();
	}
	
	[Column(Storage="_course_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string course_id
	{
		get
		{
			return this._course_id;
		}
		set
		{
			if ((this._course_id != value))
			{
				this.Oncourse_idChanging(value);
				this.SendPropertyChanging();
				this._course_id = value;
				this.SendPropertyChanged("course_id");
				this.Oncourse_idChanged();
			}
		}
	}
	
	[Column(Storage="_course_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string course_name
	{
		get
		{
			return this._course_name;
		}
		set
		{
			if ((this._course_name != value))
			{
				this.Oncourse_nameChanging(value);
				this.SendPropertyChanging();
				this._course_name = value;
				this.SendPropertyChanged("course_name");
				this.Oncourse_nameChanged();
			}
		}
	}
	
	[Column(Storage="_course_duration", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string course_duration
	{
		get
		{
			return this._course_duration;
		}
		set
		{
			if ((this._course_duration != value))
			{
				this.Oncourse_durationChanging(value);
				this.SendPropertyChanging();
				this._course_duration = value;
				this.SendPropertyChanged("course_duration");
				this.Oncourse_durationChanged();
			}
		}
	}
	
	[Column(Storage="_eligibility", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string eligibility
	{
		get
		{
			return this._eligibility;
		}
		set
		{
			if ((this._eligibility != value))
			{
				this.OneligibilityChanging(value);
				this.SendPropertyChanging();
				this._eligibility = value;
				this.SendPropertyChanged("eligibility");
				this.OneligibilityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mdatesheet")]
public partial class mdatesheet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _course;
	
	private string _sem;
	
	private string _sub;
	
	private string _subcode;
	
	private string _date;
	
	private string _shift;
	
	private string _timing;
	
	private string _examination;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncourseChanging(string value);
    partial void OncourseChanged();
    partial void OnsemChanging(string value);
    partial void OnsemChanged();
    partial void OnsubChanging(string value);
    partial void OnsubChanged();
    partial void OnsubcodeChanging(string value);
    partial void OnsubcodeChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnshiftChanging(string value);
    partial void OnshiftChanged();
    partial void OntimingChanging(string value);
    partial void OntimingChanged();
    partial void OnexaminationChanging(string value);
    partial void OnexaminationChanged();
    #endregion
	
	public mdatesheet()
	{
		OnCreated();
	}
	
	[Column(Storage="_course", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string course
	{
		get
		{
			return this._course;
		}
		set
		{
			if ((this._course != value))
			{
				this.OncourseChanging(value);
				this.SendPropertyChanging();
				this._course = value;
				this.SendPropertyChanged("course");
				this.OncourseChanged();
			}
		}
	}
	
	[Column(Storage="_sem", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string sem
	{
		get
		{
			return this._sem;
		}
		set
		{
			if ((this._sem != value))
			{
				this.OnsemChanging(value);
				this.SendPropertyChanging();
				this._sem = value;
				this.SendPropertyChanged("sem");
				this.OnsemChanged();
			}
		}
	}
	
	[Column(Storage="_sub", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string sub
	{
		get
		{
			return this._sub;
		}
		set
		{
			if ((this._sub != value))
			{
				this.OnsubChanging(value);
				this.SendPropertyChanging();
				this._sub = value;
				this.SendPropertyChanged("sub");
				this.OnsubChanged();
			}
		}
	}
	
	[Column(Storage="_subcode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string subcode
	{
		get
		{
			return this._subcode;
		}
		set
		{
			if ((this._subcode != value))
			{
				this.OnsubcodeChanging(value);
				this.SendPropertyChanging();
				this._subcode = value;
				this.SendPropertyChanged("subcode");
				this.OnsubcodeChanged();
			}
		}
	}
	
	[Column(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[Column(Storage="_shift", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string shift
	{
		get
		{
			return this._shift;
		}
		set
		{
			if ((this._shift != value))
			{
				this.OnshiftChanging(value);
				this.SendPropertyChanging();
				this._shift = value;
				this.SendPropertyChanged("shift");
				this.OnshiftChanged();
			}
		}
	}
	
	[Column(Storage="_timing", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string timing
	{
		get
		{
			return this._timing;
		}
		set
		{
			if ((this._timing != value))
			{
				this.OntimingChanging(value);
				this.SendPropertyChanging();
				this._timing = value;
				this.SendPropertyChanged("timing");
				this.OntimingChanged();
			}
		}
	}
	
	[Column(Storage="_examination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string examination
	{
		get
		{
			return this._examination;
		}
		set
		{
			if ((this._examination != value))
			{
				this.OnexaminationChanging(value);
				this.SendPropertyChanging();
				this._examination = value;
				this.SendPropertyChanged("examination");
				this.OnexaminationChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mevent")]
public partial class mevent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _eid;
	
	private string _ename;
	
	private string _edescription;
	
	private string _eplace;
	
	private string _edate;
	
	private string _etime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneidChanging(string value);
    partial void OneidChanged();
    partial void OnenameChanging(string value);
    partial void OnenameChanged();
    partial void OnedescriptionChanging(string value);
    partial void OnedescriptionChanged();
    partial void OneplaceChanging(string value);
    partial void OneplaceChanged();
    partial void OnedateChanging(string value);
    partial void OnedateChanged();
    partial void OnetimeChanging(string value);
    partial void OnetimeChanged();
    #endregion
	
	public mevent()
	{
		OnCreated();
	}
	
	[Column(Storage="_eid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string eid
	{
		get
		{
			return this._eid;
		}
		set
		{
			if ((this._eid != value))
			{
				this.OneidChanging(value);
				this.SendPropertyChanging();
				this._eid = value;
				this.SendPropertyChanged("eid");
				this.OneidChanged();
			}
		}
	}
	
	[Column(Storage="_ename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ename
	{
		get
		{
			return this._ename;
		}
		set
		{
			if ((this._ename != value))
			{
				this.OnenameChanging(value);
				this.SendPropertyChanging();
				this._ename = value;
				this.SendPropertyChanged("ename");
				this.OnenameChanged();
			}
		}
	}
	
	[Column(Storage="_edescription", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string edescription
	{
		get
		{
			return this._edescription;
		}
		set
		{
			if ((this._edescription != value))
			{
				this.OnedescriptionChanging(value);
				this.SendPropertyChanging();
				this._edescription = value;
				this.SendPropertyChanged("edescription");
				this.OnedescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_eplace", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string eplace
	{
		get
		{
			return this._eplace;
		}
		set
		{
			if ((this._eplace != value))
			{
				this.OneplaceChanging(value);
				this.SendPropertyChanging();
				this._eplace = value;
				this.SendPropertyChanged("eplace");
				this.OneplaceChanged();
			}
		}
	}
	
	[Column(Storage="_edate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string edate
	{
		get
		{
			return this._edate;
		}
		set
		{
			if ((this._edate != value))
			{
				this.OnedateChanging(value);
				this.SendPropertyChanging();
				this._edate = value;
				this.SendPropertyChanged("edate");
				this.OnedateChanged();
			}
		}
	}
	
	[Column(Storage="_etime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string etime
	{
		get
		{
			return this._etime;
		}
		set
		{
			if ((this._etime != value))
			{
				this.OnetimeChanging(value);
				this.SendPropertyChanging();
				this._etime = value;
				this.SendPropertyChanged("etime");
				this.OnetimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mfee")]
public partial class mfee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _instalmentno;
	
	private string _courseid;
	
	private string _paidto;
	
	private string _duedate;
	
	private string _amount;
	
	private string _category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninstalmentnoChanging(string value);
    partial void OninstalmentnoChanged();
    partial void OncourseidChanging(string value);
    partial void OncourseidChanged();
    partial void OnpaidtoChanging(string value);
    partial void OnpaidtoChanged();
    partial void OnduedateChanging(string value);
    partial void OnduedateChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    #endregion
	
	public mfee()
	{
		OnCreated();
	}
	
	[Column(Storage="_instalmentno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string instalmentno
	{
		get
		{
			return this._instalmentno;
		}
		set
		{
			if ((this._instalmentno != value))
			{
				this.OninstalmentnoChanging(value);
				this.SendPropertyChanging();
				this._instalmentno = value;
				this.SendPropertyChanged("instalmentno");
				this.OninstalmentnoChanged();
			}
		}
	}
	
	[Column(Storage="_courseid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string courseid
	{
		get
		{
			return this._courseid;
		}
		set
		{
			if ((this._courseid != value))
			{
				this.OncourseidChanging(value);
				this.SendPropertyChanging();
				this._courseid = value;
				this.SendPropertyChanged("courseid");
				this.OncourseidChanged();
			}
		}
	}
	
	[Column(Storage="_paidto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string paidto
	{
		get
		{
			return this._paidto;
		}
		set
		{
			if ((this._paidto != value))
			{
				this.OnpaidtoChanging(value);
				this.SendPropertyChanging();
				this._paidto = value;
				this.SendPropertyChanged("paidto");
				this.OnpaidtoChanged();
			}
		}
	}
	
	[Column(Storage="_duedate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string duedate
	{
		get
		{
			return this._duedate;
		}
		set
		{
			if ((this._duedate != value))
			{
				this.OnduedateChanging(value);
				this.SendPropertyChanging();
				this._duedate = value;
				this.SendPropertyChanged("duedate");
				this.OnduedateChanged();
			}
		}
	}
	
	[Column(Storage="_amount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string amount
	{
		get
		{
			return this._amount;
		}
		set
		{
			if ((this._amount != value))
			{
				this.OnamountChanging(value);
				this.SendPropertyChanging();
				this._amount = value;
				this.SendPropertyChanged("amount");
				this.OnamountChanged();
			}
		}
	}
	
	[Column(Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string category
	{
		get
		{
			return this._category;
		}
		set
		{
			if ((this._category != value))
			{
				this.OncategoryChanging(value);
				this.SendPropertyChanging();
				this._category = value;
				this.SendPropertyChanged("category");
				this.OncategoryChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mpasswords")]
public partial class mpassword : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _usertype;
	
	private string _username;
	
	private string _password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusertypeChanging(string value);
    partial void OnusertypeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
	
	public mpassword()
	{
		OnCreated();
	}
	
	[Column(Storage="_usertype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string usertype
	{
		get
		{
			return this._usertype;
		}
		set
		{
			if ((this._usertype != value))
			{
				this.OnusertypeChanging(value);
				this.SendPropertyChanging();
				this._usertype = value;
				this.SendPropertyChanged("usertype");
				this.OnusertypeChanged();
			}
		}
	}
	
	[Column(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[Column(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mresult")]
public partial class mresult : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _srno;
	
	private string _batchid;
	
	private string _enrolmentno;
	
	private string _subid;
	
	private string _markstheory;
	
	private string _markspractical;
	
	private string _res_date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsrnoChanging(string value);
    partial void OnsrnoChanged();
    partial void OnbatchidChanging(string value);
    partial void OnbatchidChanged();
    partial void OnenrolmentnoChanging(string value);
    partial void OnenrolmentnoChanged();
    partial void OnsubidChanging(string value);
    partial void OnsubidChanged();
    partial void OnmarkstheoryChanging(string value);
    partial void OnmarkstheoryChanged();
    partial void OnmarkspracticalChanging(string value);
    partial void OnmarkspracticalChanged();
    partial void Onres_dateChanging(string value);
    partial void Onres_dateChanged();
    #endregion
	
	public mresult()
	{
		OnCreated();
	}
	
	[Column(Storage="_srno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string srno
	{
		get
		{
			return this._srno;
		}
		set
		{
			if ((this._srno != value))
			{
				this.OnsrnoChanging(value);
				this.SendPropertyChanging();
				this._srno = value;
				this.SendPropertyChanged("srno");
				this.OnsrnoChanged();
			}
		}
	}
	
	[Column(Storage="_batchid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string batchid
	{
		get
		{
			return this._batchid;
		}
		set
		{
			if ((this._batchid != value))
			{
				this.OnbatchidChanging(value);
				this.SendPropertyChanging();
				this._batchid = value;
				this.SendPropertyChanged("batchid");
				this.OnbatchidChanged();
			}
		}
	}
	
	[Column(Storage="_enrolmentno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string enrolmentno
	{
		get
		{
			return this._enrolmentno;
		}
		set
		{
			if ((this._enrolmentno != value))
			{
				this.OnenrolmentnoChanging(value);
				this.SendPropertyChanging();
				this._enrolmentno = value;
				this.SendPropertyChanged("enrolmentno");
				this.OnenrolmentnoChanged();
			}
		}
	}
	
	[Column(Storage="_subid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string subid
	{
		get
		{
			return this._subid;
		}
		set
		{
			if ((this._subid != value))
			{
				this.OnsubidChanging(value);
				this.SendPropertyChanging();
				this._subid = value;
				this.SendPropertyChanged("subid");
				this.OnsubidChanged();
			}
		}
	}
	
	[Column(Storage="_markstheory", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string markstheory
	{
		get
		{
			return this._markstheory;
		}
		set
		{
			if ((this._markstheory != value))
			{
				this.OnmarkstheoryChanging(value);
				this.SendPropertyChanging();
				this._markstheory = value;
				this.SendPropertyChanged("markstheory");
				this.OnmarkstheoryChanged();
			}
		}
	}
	
	[Column(Storage="_markspractical", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string markspractical
	{
		get
		{
			return this._markspractical;
		}
		set
		{
			if ((this._markspractical != value))
			{
				this.OnmarkspracticalChanging(value);
				this.SendPropertyChanging();
				this._markspractical = value;
				this.SendPropertyChanged("markspractical");
				this.OnmarkspracticalChanged();
			}
		}
	}
	
	[Column(Storage="_res_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string res_date
	{
		get
		{
			return this._res_date;
		}
		set
		{
			if ((this._res_date != value))
			{
				this.Onres_dateChanging(value);
				this.SendPropertyChanging();
				this._res_date = value;
				this.SendPropertyChanged("res_date");
				this.Onres_dateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mstaff")]
public partial class mstaff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _staffid;
	
	private string _designationname;
	
	private string _firstname;
	
	private string _lastname;
	
	private string _address1;
	
	private string _address2;
	
	private string _address3;
	
	private string _city;
	
	private string _pin;
	
	private string _state;
	
	private string _dob;
	
	private string _doj;
	
	private string _dol;
	
	private string _qualification;
	
	private string _experience;
	
	private string _phone;
	
	private string _gender;
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstaffidChanging(string value);
    partial void OnstaffidChanged();
    partial void OndesignationnameChanging(string value);
    partial void OndesignationnameChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void Onaddress3Changing(string value);
    partial void Onaddress3Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpinChanging(string value);
    partial void OnpinChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void OndojChanging(string value);
    partial void OndojChanged();
    partial void OndolChanging(string value);
    partial void OndolChanged();
    partial void OnqualificationChanging(string value);
    partial void OnqualificationChanged();
    partial void OnexperienceChanging(string value);
    partial void OnexperienceChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public mstaff()
	{
		OnCreated();
	}
	
	[Column(Storage="_staffid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string staffid
	{
		get
		{
			return this._staffid;
		}
		set
		{
			if ((this._staffid != value))
			{
				this.OnstaffidChanging(value);
				this.SendPropertyChanging();
				this._staffid = value;
				this.SendPropertyChanged("staffid");
				this.OnstaffidChanged();
			}
		}
	}
	
	[Column(Storage="_designationname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string designationname
	{
		get
		{
			return this._designationname;
		}
		set
		{
			if ((this._designationname != value))
			{
				this.OndesignationnameChanging(value);
				this.SendPropertyChanging();
				this._designationname = value;
				this.SendPropertyChanged("designationname");
				this.OndesignationnameChanged();
			}
		}
	}
	
	[Column(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string firstname
	{
		get
		{
			return this._firstname;
		}
		set
		{
			if ((this._firstname != value))
			{
				this.OnfirstnameChanging(value);
				this.SendPropertyChanging();
				this._firstname = value;
				this.SendPropertyChanged("firstname");
				this.OnfirstnameChanged();
			}
		}
	}
	
	[Column(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string lastname
	{
		get
		{
			return this._lastname;
		}
		set
		{
			if ((this._lastname != value))
			{
				this.OnlastnameChanging(value);
				this.SendPropertyChanging();
				this._lastname = value;
				this.SendPropertyChanged("lastname");
				this.OnlastnameChanged();
			}
		}
	}
	
	[Column(Storage="_address1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address1
	{
		get
		{
			return this._address1;
		}
		set
		{
			if ((this._address1 != value))
			{
				this.Onaddress1Changing(value);
				this.SendPropertyChanging();
				this._address1 = value;
				this.SendPropertyChanged("address1");
				this.Onaddress1Changed();
			}
		}
	}
	
	[Column(Storage="_address2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address2
	{
		get
		{
			return this._address2;
		}
		set
		{
			if ((this._address2 != value))
			{
				this.Onaddress2Changing(value);
				this.SendPropertyChanging();
				this._address2 = value;
				this.SendPropertyChanged("address2");
				this.Onaddress2Changed();
			}
		}
	}
	
	[Column(Storage="_address3", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address3
	{
		get
		{
			return this._address3;
		}
		set
		{
			if ((this._address3 != value))
			{
				this.Onaddress3Changing(value);
				this.SendPropertyChanging();
				this._address3 = value;
				this.SendPropertyChanged("address3");
				this.Onaddress3Changed();
			}
		}
	}
	
	[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[Column(Storage="_pin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pin
	{
		get
		{
			return this._pin;
		}
		set
		{
			if ((this._pin != value))
			{
				this.OnpinChanging(value);
				this.SendPropertyChanging();
				this._pin = value;
				this.SendPropertyChanged("pin");
				this.OnpinChanged();
			}
		}
	}
	
	[Column(Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string state
	{
		get
		{
			return this._state;
		}
		set
		{
			if ((this._state != value))
			{
				this.OnstateChanging(value);
				this.SendPropertyChanging();
				this._state = value;
				this.SendPropertyChanged("state");
				this.OnstateChanged();
			}
		}
	}
	
	[Column(Storage="_dob", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string dob
	{
		get
		{
			return this._dob;
		}
		set
		{
			if ((this._dob != value))
			{
				this.OndobChanging(value);
				this.SendPropertyChanging();
				this._dob = value;
				this.SendPropertyChanged("dob");
				this.OndobChanged();
			}
		}
	}
	
	[Column(Storage="_doj", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string doj
	{
		get
		{
			return this._doj;
		}
		set
		{
			if ((this._doj != value))
			{
				this.OndojChanging(value);
				this.SendPropertyChanging();
				this._doj = value;
				this.SendPropertyChanged("doj");
				this.OndojChanged();
			}
		}
	}
	
	[Column(Storage="_dol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string dol
	{
		get
		{
			return this._dol;
		}
		set
		{
			if ((this._dol != value))
			{
				this.OndolChanging(value);
				this.SendPropertyChanging();
				this._dol = value;
				this.SendPropertyChanged("dol");
				this.OndolChanged();
			}
		}
	}
	
	[Column(Storage="_qualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string qualification
	{
		get
		{
			return this._qualification;
		}
		set
		{
			if ((this._qualification != value))
			{
				this.OnqualificationChanging(value);
				this.SendPropertyChanging();
				this._qualification = value;
				this.SendPropertyChanged("qualification");
				this.OnqualificationChanged();
			}
		}
	}
	
	[Column(Storage="_experience", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string experience
	{
		get
		{
			return this._experience;
		}
		set
		{
			if ((this._experience != value))
			{
				this.OnexperienceChanging(value);
				this.SendPropertyChanging();
				this._experience = value;
				this.SendPropertyChanged("experience");
				this.OnexperienceChanged();
			}
		}
	}
	
	[Column(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[Column(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.mstudent")]
public partial class mstudent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _enrolmentno;
	
	private string _firstname;
	
	private string _lastname;
	
	private string _courseid;
	
	private string _referenceno;
	
	private string _address1;
	
	private string _address2;
	
	private string _address3;
	
	private string _city;
	
	private string _pin;
	
	private string _state;
	
	private string _email;
	
	private string _dob;
	
	private string _fathername;
	
	private string _mothername;
	
	private string _category;
	
	private string _gender;
	
	private string _phone;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnenrolmentnoChanging(string value);
    partial void OnenrolmentnoChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OncourseidChanging(string value);
    partial void OncourseidChanged();
    partial void OnreferencenoChanging(string value);
    partial void OnreferencenoChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void Onaddress3Changing(string value);
    partial void Onaddress3Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpinChanging(string value);
    partial void OnpinChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void OnfathernameChanging(string value);
    partial void OnfathernameChanged();
    partial void OnmothernameChanging(string value);
    partial void OnmothernameChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
	
	public mstudent()
	{
		OnCreated();
	}
	
	[Column(Storage="_enrolmentno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string enrolmentno
	{
		get
		{
			return this._enrolmentno;
		}
		set
		{
			if ((this._enrolmentno != value))
			{
				this.OnenrolmentnoChanging(value);
				this.SendPropertyChanging();
				this._enrolmentno = value;
				this.SendPropertyChanged("enrolmentno");
				this.OnenrolmentnoChanged();
			}
		}
	}
	
	[Column(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string firstname
	{
		get
		{
			return this._firstname;
		}
		set
		{
			if ((this._firstname != value))
			{
				this.OnfirstnameChanging(value);
				this.SendPropertyChanging();
				this._firstname = value;
				this.SendPropertyChanged("firstname");
				this.OnfirstnameChanged();
			}
		}
	}
	
	[Column(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string lastname
	{
		get
		{
			return this._lastname;
		}
		set
		{
			if ((this._lastname != value))
			{
				this.OnlastnameChanging(value);
				this.SendPropertyChanging();
				this._lastname = value;
				this.SendPropertyChanged("lastname");
				this.OnlastnameChanged();
			}
		}
	}
	
	[Column(Storage="_courseid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string courseid
	{
		get
		{
			return this._courseid;
		}
		set
		{
			if ((this._courseid != value))
			{
				this.OncourseidChanging(value);
				this.SendPropertyChanging();
				this._courseid = value;
				this.SendPropertyChanged("courseid");
				this.OncourseidChanged();
			}
		}
	}
	
	[Column(Storage="_referenceno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string referenceno
	{
		get
		{
			return this._referenceno;
		}
		set
		{
			if ((this._referenceno != value))
			{
				this.OnreferencenoChanging(value);
				this.SendPropertyChanging();
				this._referenceno = value;
				this.SendPropertyChanged("referenceno");
				this.OnreferencenoChanged();
			}
		}
	}
	
	[Column(Storage="_address1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address1
	{
		get
		{
			return this._address1;
		}
		set
		{
			if ((this._address1 != value))
			{
				this.Onaddress1Changing(value);
				this.SendPropertyChanging();
				this._address1 = value;
				this.SendPropertyChanged("address1");
				this.Onaddress1Changed();
			}
		}
	}
	
	[Column(Storage="_address2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address2
	{
		get
		{
			return this._address2;
		}
		set
		{
			if ((this._address2 != value))
			{
				this.Onaddress2Changing(value);
				this.SendPropertyChanging();
				this._address2 = value;
				this.SendPropertyChanged("address2");
				this.Onaddress2Changed();
			}
		}
	}
	
	[Column(Storage="_address3", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string address3
	{
		get
		{
			return this._address3;
		}
		set
		{
			if ((this._address3 != value))
			{
				this.Onaddress3Changing(value);
				this.SendPropertyChanging();
				this._address3 = value;
				this.SendPropertyChanged("address3");
				this.Onaddress3Changed();
			}
		}
	}
	
	[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[Column(Storage="_pin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pin
	{
		get
		{
			return this._pin;
		}
		set
		{
			if ((this._pin != value))
			{
				this.OnpinChanging(value);
				this.SendPropertyChanging();
				this._pin = value;
				this.SendPropertyChanged("pin");
				this.OnpinChanged();
			}
		}
	}
	
	[Column(Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string state
	{
		get
		{
			return this._state;
		}
		set
		{
			if ((this._state != value))
			{
				this.OnstateChanging(value);
				this.SendPropertyChanging();
				this._state = value;
				this.SendPropertyChanged("state");
				this.OnstateChanged();
			}
		}
	}
	
	[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[Column(Storage="_dob", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string dob
	{
		get
		{
			return this._dob;
		}
		set
		{
			if ((this._dob != value))
			{
				this.OndobChanging(value);
				this.SendPropertyChanging();
				this._dob = value;
				this.SendPropertyChanged("dob");
				this.OndobChanged();
			}
		}
	}
	
	[Column(Storage="_fathername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string fathername
	{
		get
		{
			return this._fathername;
		}
		set
		{
			if ((this._fathername != value))
			{
				this.OnfathernameChanging(value);
				this.SendPropertyChanging();
				this._fathername = value;
				this.SendPropertyChanged("fathername");
				this.OnfathernameChanged();
			}
		}
	}
	
	[Column(Storage="_mothername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string mothername
	{
		get
		{
			return this._mothername;
		}
		set
		{
			if ((this._mothername != value))
			{
				this.OnmothernameChanging(value);
				this.SendPropertyChanging();
				this._mothername = value;
				this.SendPropertyChanged("mothername");
				this.OnmothernameChanged();
			}
		}
	}
	
	[Column(Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string category
	{
		get
		{
			return this._category;
		}
		set
		{
			if ((this._category != value))
			{
				this.OncategoryChanging(value);
				this.SendPropertyChanging();
				this._category = value;
				this.SendPropertyChanged("category");
				this.OncategoryChanged();
			}
		}
	}
	
	[Column(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[Column(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.tattendance_stu")]
public partial class tattendance_stu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _enrolmentno;
	
	private string _name;
	
	private string _att_date;
	
	private string _status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnenrolmentnoChanging(string value);
    partial void OnenrolmentnoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onatt_dateChanging(string value);
    partial void Onatt_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
	
	public tattendance_stu()
	{
		OnCreated();
	}
	
	[Column(Storage="_enrolmentno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string enrolmentno
	{
		get
		{
			return this._enrolmentno;
		}
		set
		{
			if ((this._enrolmentno != value))
			{
				this.OnenrolmentnoChanging(value);
				this.SendPropertyChanging();
				this._enrolmentno = value;
				this.SendPropertyChanged("enrolmentno");
				this.OnenrolmentnoChanged();
			}
		}
	}
	
	[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[Column(Storage="_att_date", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string att_date
	{
		get
		{
			return this._att_date;
		}
		set
		{
			if ((this._att_date != value))
			{
				this.Onatt_dateChanging(value);
				this.SendPropertyChanging();
				this._att_date = value;
				this.SendPropertyChanged("att_date");
				this.Onatt_dateChanged();
			}
		}
	}
	
	[Column(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.tattendancestaff")]
public partial class tattendancestaff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _staffid;
	
	private string _name;
	
	private string _att_date;
	
	private string _status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstaffidChanging(string value);
    partial void OnstaffidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onatt_dateChanging(string value);
    partial void Onatt_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
	
	public tattendancestaff()
	{
		OnCreated();
	}
	
	[Column(Storage="_staffid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string staffid
	{
		get
		{
			return this._staffid;
		}
		set
		{
			if ((this._staffid != value))
			{
				this.OnstaffidChanging(value);
				this.SendPropertyChanging();
				this._staffid = value;
				this.SendPropertyChanged("staffid");
				this.OnstaffidChanged();
			}
		}
	}
	
	[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[Column(Storage="_att_date", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string att_date
	{
		get
		{
			return this._att_date;
		}
		set
		{
			if ((this._att_date != value))
			{
				this.Onatt_dateChanging(value);
				this.SendPropertyChanging();
				this._att_date = value;
				this.SendPropertyChanged("att_date");
				this.Onatt_dateChanged();
			}
		}
	}
	
	[Column(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.transport")]
public partial class transport : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _busno;
	
	private string _city;
	
	private string _startpt;
	
	private string _route;
	
	private string _picpath;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusnoChanging(string value);
    partial void OnbusnoChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstartptChanging(string value);
    partial void OnstartptChanged();
    partial void OnrouteChanging(string value);
    partial void OnrouteChanged();
    partial void OnpicpathChanging(string value);
    partial void OnpicpathChanged();
    #endregion
	
	public transport()
	{
		OnCreated();
	}
	
	[Column(Storage="_busno", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string busno
	{
		get
		{
			return this._busno;
		}
		set
		{
			if ((this._busno != value))
			{
				this.OnbusnoChanging(value);
				this.SendPropertyChanging();
				this._busno = value;
				this.SendPropertyChanged("busno");
				this.OnbusnoChanged();
			}
		}
	}
	
	[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[Column(Storage="_startpt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string startpt
	{
		get
		{
			return this._startpt;
		}
		set
		{
			if ((this._startpt != value))
			{
				this.OnstartptChanging(value);
				this.SendPropertyChanging();
				this._startpt = value;
				this.SendPropertyChanged("startpt");
				this.OnstartptChanged();
			}
		}
	}
	
	[Column(Storage="_route", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string route
	{
		get
		{
			return this._route;
		}
		set
		{
			if ((this._route != value))
			{
				this.OnrouteChanging(value);
				this.SendPropertyChanging();
				this._route = value;
				this.SendPropertyChanged("route");
				this.OnrouteChanged();
			}
		}
	}
	
	[Column(Storage="_picpath", DbType="VarChar(50)")]
	public string picpath
	{
		get
		{
			return this._picpath;
		}
		set
		{
			if ((this._picpath != value))
			{
				this.OnpicpathChanging(value);
				this.SendPropertyChanging();
				this._picpath = value;
				this.SendPropertyChanged("picpath");
				this.OnpicpathChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.tsalarypaid")]
public partial class tsalarypaid : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _staffid;
	
	private string _paydate;
	
	private string _designationname;
	
	private string _amount;
	
	private string _pmtmode;
	
	private string _chequeno;
	
	private string _bankname;
	
	private string _dated;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstaffidChanging(string value);
    partial void OnstaffidChanged();
    partial void OnpaydateChanging(string value);
    partial void OnpaydateChanged();
    partial void OndesignationnameChanging(string value);
    partial void OndesignationnameChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnpmtmodeChanging(string value);
    partial void OnpmtmodeChanged();
    partial void OnchequenoChanging(string value);
    partial void OnchequenoChanged();
    partial void OnbanknameChanging(string value);
    partial void OnbanknameChanged();
    partial void OndatedChanging(string value);
    partial void OndatedChanged();
    #endregion
	
	public tsalarypaid()
	{
		OnCreated();
	}
	
	[Column(Storage="_staffid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string staffid
	{
		get
		{
			return this._staffid;
		}
		set
		{
			if ((this._staffid != value))
			{
				this.OnstaffidChanging(value);
				this.SendPropertyChanging();
				this._staffid = value;
				this.SendPropertyChanged("staffid");
				this.OnstaffidChanged();
			}
		}
	}
	
	[Column(Storage="_paydate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string paydate
	{
		get
		{
			return this._paydate;
		}
		set
		{
			if ((this._paydate != value))
			{
				this.OnpaydateChanging(value);
				this.SendPropertyChanging();
				this._paydate = value;
				this.SendPropertyChanged("paydate");
				this.OnpaydateChanged();
			}
		}
	}
	
	[Column(Storage="_designationname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string designationname
	{
		get
		{
			return this._designationname;
		}
		set
		{
			if ((this._designationname != value))
			{
				this.OndesignationnameChanging(value);
				this.SendPropertyChanging();
				this._designationname = value;
				this.SendPropertyChanged("designationname");
				this.OndesignationnameChanged();
			}
		}
	}
	
	[Column(Storage="_amount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string amount
	{
		get
		{
			return this._amount;
		}
		set
		{
			if ((this._amount != value))
			{
				this.OnamountChanging(value);
				this.SendPropertyChanging();
				this._amount = value;
				this.SendPropertyChanged("amount");
				this.OnamountChanged();
			}
		}
	}
	
	[Column(Storage="_pmtmode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pmtmode
	{
		get
		{
			return this._pmtmode;
		}
		set
		{
			if ((this._pmtmode != value))
			{
				this.OnpmtmodeChanging(value);
				this.SendPropertyChanging();
				this._pmtmode = value;
				this.SendPropertyChanged("pmtmode");
				this.OnpmtmodeChanged();
			}
		}
	}
	
	[Column(Storage="_chequeno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string chequeno
	{
		get
		{
			return this._chequeno;
		}
		set
		{
			if ((this._chequeno != value))
			{
				this.OnchequenoChanging(value);
				this.SendPropertyChanging();
				this._chequeno = value;
				this.SendPropertyChanged("chequeno");
				this.OnchequenoChanged();
			}
		}
	}
	
	[Column(Storage="_bankname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string bankname
	{
		get
		{
			return this._bankname;
		}
		set
		{
			if ((this._bankname != value))
			{
				this.OnbanknameChanging(value);
				this.SendPropertyChanging();
				this._bankname = value;
				this.SendPropertyChanged("bankname");
				this.OnbanknameChanged();
			}
		}
	}
	
	[Column(Storage="_dated", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string dated
	{
		get
		{
			return this._dated;
		}
		set
		{
			if ((this._dated != value))
			{
				this.OndatedChanging(value);
				this.SendPropertyChanging();
				this._dated = value;
				this.SendPropertyChanged("dated");
				this.OndatedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.feedback")]
public partial class feedback : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _name;
	
	private string _phone;
	
	private string _email;
	
	private string _address;
	
	private string _city;
	
	private string _feedback1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onfeedback1Changing(string value);
    partial void Onfeedback1Changed();
    #endregion
	
	public feedback()
	{
		OnCreated();
	}
	
	[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[Column(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[Column(Storage="_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[Column(Name="feedback", Storage="_feedback1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string feedback1
	{
		get
		{
			return this._feedback1;
		}
		set
		{
			if ((this._feedback1 != value))
			{
				this.Onfeedback1Changing(value);
				this.SendPropertyChanging();
				this._feedback1 = value;
				this.SendPropertyChanged("feedback1");
				this.Onfeedback1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
